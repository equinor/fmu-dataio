name: Test

on:
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

jobs:
  run_tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest]
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Ert Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libegl1

      - name: Install fmu-dataio
        run: |
          pip install pip -U
          pip install -e .[dev]

       # fmu-sumo-uploader blocked by OpenVDS on Python 3.12
      - name: Install fmu-sumo-uploader for Python 3.11
        if: matrix.python-version == '3.11'
        run:
          pip install \
            "fmu-sumo-uploader @ git+https://github.com/equinor/fmu-sumo-uploader.git"

      - name: Azure Login
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.SUMO_TEST_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.SUMO_TEST_SUBSCRIPTION_ID }}

      - name: Get Sumo Explorer access token from Azure
        run: |
          az --version
          az account list
          access_token=$(az account get-access-token --scope api://88d2b022-3539-4dda-9e66-853801334a86/.default --query accessToken --output tsv)
          echo "SUMO_ACCESS_TOKEN=$access_token" >> "$GITHUB_ENV"

      - name: Full test
        run: |

          # Reinstall pydantic to force latest version
          pip install -U pydantic

          if [[ "${{ github.event.pull_request.base.ref }}" == "staging" ]]; then
            pytest -n auto -v --cov --cov-report term-missing --prod
          else
            pytest -n auto -v --cov --cov-report term-missing
          fi

  docker_build:
    name: Build Docker image
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Test Docker image can build
        run: docker build .
